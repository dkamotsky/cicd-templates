{
  "default": {
    "jobs": [
      {
        "name": "{{cookiecutter.corning_division.lower()}}_production_{{cookiecutter.project_slug}}_sample",
        "new_cluster": {
          "spark_version": "7.3.x-cpu-ml-scala2.12",
          "node_type_id": "i3.xlarge",
          "driver_node_type_id": "i3.xlarge",
          "num_workers": 2,
          "spark_conf": {
            "spark.hadoop.fs.s3a.impl": "com.databricks.s3a.S3AFileSystem",
            "spark.hadoop.fs.s3n.impl": "com.databricks.s3a.S3AFileSystem",
            "spark.hadoop.fs.s3a.acl.default": "BucketOwnerFullControl",
            "spark.hadoop.fs.s3a.canned.acl": "BucketOwnerFullControl",
            "spark.hadoop.fs.s3.impl": "com.databricks.s3a.S3AFileSystem",
            "spark.sql.adaptive.enabled": "true",
            "spark.databricks.workspace.matplotlibInline.enabled": "true",
            "spark.databricks.conda.condaMagic.enabled": "true"
          },
          "aws_attributes": {
            "first_on_demand": 1,
            "availability": "SPOT_WITH_FALLBACK",
            "zone_id": "us-east-1a",
            "instance_profile_arn": "{{cookiecutter.__cluster_policies[cookiecutter.corning_division]['instance_profile_arn']}}",
            "spot_bid_price_percent": 100,
            "ebs_volume_type": "GENERAL_PURPOSE_SSD",
            "ebs_volume_count": 3,
            "ebs_volume_size": 100
          },
          "cluster_source": "JOB",
          "custom_tags": {
            "Application": "user-DBKcluster-{{cookiecutter.corning_division}}"
          },
          "policy_id": "{{cookiecutter.__cluster_policies[cookiecutter.corning_division]['policy_id']}}"
        },
        "email_notifications": {
          "on_start": [],
          "on_success": [],
          "on_failure": []
        },
        "timeout_seconds": 100000000,
        "max_retries": 1,
        "schedule": {
          "quartz_cron_expression": "0 0 22 ? * *",
          "timezone_id": "America/New_York"
        },
        "spark_python_task": {
          "python_file": "{{cookiecutter.project_slug}}/jobs/sample/entrypoint.py",
          "parameters": [
            "--conf-file",
            "{{cookiecutter.project_slug}}/config/production.yaml"
          ]
        }
      },
      {
        "name": "{{cookiecutter.corning_division.lower()}}_test_acceptance_{{cookiecutter.project_slug}}_sample",
        "new_cluster": {
          "spark_version": "7.3.x-cpu-ml-scala2.12",
          "node_type_id": "i3.xlarge",
          "driver_node_type_id": "i3.xlarge",
          "num_workers": 2,
          "spark_conf": {
            "spark.hadoop.fs.s3a.impl": "com.databricks.s3a.S3AFileSystem",
            "spark.hadoop.fs.s3n.impl": "com.databricks.s3a.S3AFileSystem",
            "spark.hadoop.fs.s3a.acl.default": "BucketOwnerFullControl",
            "spark.hadoop.fs.s3a.canned.acl": "BucketOwnerFullControl",
            "spark.hadoop.fs.s3.impl": "com.databricks.s3a.S3AFileSystem",
            "spark.sql.adaptive.enabled": "true",
            "spark.databricks.workspace.matplotlibInline.enabled": "true",
            "spark.databricks.conda.condaMagic.enabled": "true"
          },
          "aws_attributes": {
            "first_on_demand": 1,
            "availability": "SPOT_WITH_FALLBACK",
            "zone_id": "us-east-1a",
            "instance_profile_arn": "{{cookiecutter.__cluster_policies[cookiecutter.corning_division]['instance_profile_arn']}}",
            "spot_bid_price_percent": 100,
            "ebs_volume_type": "GENERAL_PURPOSE_SSD",
            "ebs_volume_count": 3,
            "ebs_volume_size": 100
          },
          "cluster_source": "JOB",
          "custom_tags": {
            "Application": "user-DBKcluster-{{cookiecutter.corning_division}}"
          },
          "policy_id": "{{cookiecutter.__cluster_policies[cookiecutter.corning_division]['policy_id']}}"
        },
        "include": [ "{{cookiecutter.project_slug}}/config", "tests/integration" ],
        "spark_python_task": {
          "python_file": "tests/integration/acceptance/sample_test.py",
          "parameters": [
            "--conf-file",
            "tests/integration/acceptance/sample_test.yaml"
          ]
        }
      },
      {
        "name": "{{cookiecutter.corning_division.lower()}}_test_functional_{{cookiecutter.project_slug}}_sample",
        "new_cluster": {
          "spark_version": "7.3.x-cpu-ml-scala2.12",
          "node_type_id": "i3.xlarge",
          "driver_node_type_id": "i3.xlarge",
          "num_workers": 2,
          "spark_conf": {
            "spark.hadoop.fs.s3a.impl": "com.databricks.s3a.S3AFileSystem",
            "spark.hadoop.fs.s3n.impl": "com.databricks.s3a.S3AFileSystem",
            "spark.hadoop.fs.s3a.acl.default": "BucketOwnerFullControl",
            "spark.hadoop.fs.s3a.canned.acl": "BucketOwnerFullControl",
            "spark.hadoop.fs.s3.impl": "com.databricks.s3a.S3AFileSystem",
            "spark.sql.adaptive.enabled": "true",
            "spark.databricks.workspace.matplotlibInline.enabled": "true",
            "spark.databricks.conda.condaMagic.enabled": "true"
          },
          "aws_attributes": {
            "first_on_demand": 1,
            "availability": "SPOT_WITH_FALLBACK",
            "zone_id": "us-east-1a",
            "instance_profile_arn": "{{cookiecutter.__cluster_policies[cookiecutter.corning_division]['instance_profile_arn']}}",
            "spot_bid_price_percent": 100,
            "ebs_volume_type": "GENERAL_PURPOSE_SSD",
            "ebs_volume_count": 3,
            "ebs_volume_size": 100
          },
          "cluster_source": "JOB",
          "custom_tags": {
            "Application": "user-DBKcluster-{{cookiecutter.corning_division}}"
          },
          "policy_id": "{{cookiecutter.__cluster_policies[cookiecutter.corning_division]['policy_id']}}"
        },
        "include": [ "{{cookiecutter.project_slug}}/config", "tests/integration" ],
        "spark_python_task": {
          "python_file": "tests/integration/functional/sample_test.py",
          "parameters": [
            "--conf-file",
            "tests/integration/functional/sample_test.yaml"
          ]
        }
      }
    ]
  }
}
